<Project>
  <Name>Catsland</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>ShadowSystem</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>ShadowSystem</Name>
        <Access>Public</Access>
        <Location left="747" top="399" />
        <Size width="162" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Stack&lt;int&gt; m_freeLightIDList</Member>
        <Member type="Field">CatColor m_amibentColor</Member>
        <Member type="Field">Effect m_shadowingEffect</Member>
        <Member type="Field">Effect m_accumulateEffect</Member>
        <Member type="Field">Stack&lt;int&gt; m_freeShadowBodyIDList</Member>
        <Member type="Method">public void Initialize(CatProject _project)</Member>
        <Member type="Method">public void AddLight(Light _light)</Member>
        <Member type="Method">public void AddShadowBody(ShadingBody _shadowBody)</Member>
        <Member type="Method">public void UpdateShadowBody(ShadingBody _shadowBody)</Member>
        <Member type="Method">public void UpdateLight(Light _light)</Member>
        <Member type="Method">public void Update(int _timeLastFrame)</Member>
        <Member type="Method">public void DoRender(int _timeLastFrame)</Member>
        <Member type="Method">public void ShadowObject(int _timeLastFrame, RenderTarget _toBeShadow)</Member>
        <Member type="Method">public bool IsPointInLight(Vector2 _point, int _lightID)</Member>
        <Member type="Method">public bool IsPointEnlightByLight(Vector2 _point, int _lightID)</Member>
        <Member type="Method">public bool IsPointEnlighted(Vector2 _point)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Light</Name>
        <Access>Public</Access>
        <Location left="1057" top="416" />
        <Size width="162" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int ID { get; set; }</Member>
        <Member type="Property">public Vector2 Offset { get; set; }</Member>
        <Member type="Property">public Color DiffuseColor { get; set; }</Member>
        <Member type="Property">public bool IsLightOn { get; set; }</Member>
        <Member type="Property">public bool RenderLight { get; set; }</Member>
        <Member type="Property">public bool Enlight { get; set; }</Member>
        <Member type="Method">public virtual bool IsPointInLightRange(Vector _point)</Member>
        <Member type="Method">public virtual Vector2 GetLightDirection(Vector2 _point)</Member>
        <Member type="Method">public virtual bool ShouldEdgeHasShadow(ShadingBody _shadingBody, int _edge)</Member>
        <Member type="Method">public virtual bool IsPointEnlighted(Vector2 _point)</Member>
        <Member type="Method">public virtual bool IsPointInLight(Vector2 _point)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShadingBody</Name>
        <Access>Public</Access>
        <Location left="1057" top="708" />
        <Size width="162" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int ID { get; set; }</Member>
        <Member type="Property">public Vector2 Offset { get; set; }</Member>
        <Member type="Method">public Vector2 GetVertex(int _index)</Member>
        <Member type="Method">public Vector2 GetVertexInWorld(int _index)</Member>
        <Member type="Method">public Matrix GetTransform2World()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LightShadow</Name>
        <Access>Public</Access>
        <Location left="747" top="846" />
        <Size width="162" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Field">static float ShadowDistance</Member>
        <Member type="Property">public bool Enable { get; set; }</Member>
        <Member type="Method">public static LightShadow UpdateShadow(LightShadow _toBeUpdate, Light _light, ShadingBody _body, int _edgeIndex)</Member>
        <Member type="Method">public bool IsPointInShadow(Vector2 _point)</Member>
        <Member type="Method">public bool IsBodyInShadow(Vector2[] _vertices, Matrix _transform)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PointLight</Name>
        <Access>Public</Access>
        <Location left="1283" top="416" />
        <Size width="162" height="118" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public float OutRaidus { get; set; }</Member>
        <Member type="Property">public float InRadius { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SpotLight</Name>
        <Access>Public</Access>
        <Location left="1491" top="416" />
        <Size width="162" height="118" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public float FanInDegree { get; set; }</Member>
        <Member type="Property">public float DirectionToDown { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShadingRectangle</Name>
        <Access>Public</Access>
        <Location left="1289" top="713" />
        <Size width="162" height="157" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Vector2 Size { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1134</X>
          <Y>391</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="3">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>826</X>
          <Y>775</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>826</X>
          <Y>819</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1032</X>
          <Y>821</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>966</X>
          <Y>551</Y>
        </BendPoint>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="4" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="5" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1466</X>
          <Y>478</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="6" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Blacklist</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Blacklist</Name>
        <Access>Public</Access>
        <Location left="67" top="104" />
        <Size width="162" height="121" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public HashSet&lt;Prey&gt; Preys { get; }</Member>
        <Member type="Method">public void AddToBlacklist(Prey _prey)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Prey</Name>
        <Access>Public</Access>
        <Location left="302" top="104" />
        <Size width="162" height="121" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Vector2 GetPointInWorld()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Hunter</Name>
        <Access>Public</Access>
        <Location left="304" top="278" />
        <Size width="162" height="80" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SpotLight</Name>
        <Access>Public</Access>
        <Location left="67" top="278" />
        <Size width="162" height="80" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="2" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Debugging</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>DebugShape</Name>
        <Access>Public</Access>
        <Location left="100" top="138" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public Vector3 Position { get; set; }</Member>
        <Member type="Property">public Vector3 Rotation { get; set; }</Member>
        <Member type="Property">public Vector3 Scale { get; set; }</Member>
        <Member type="Property">public GameObject RelatedGameObject { get; set; }</Member>
        <Member type="Property">public Color DiffuseColor { get; set; }</Member>
        <Member type="Method">public void SetVertices(List&lt;Vector2&gt; _vertices)</Member>
        <Member type="Method">public void SetAsRectangle(Vector2 _size, Vector2 _offset)</Member>
        <Member type="Method">public void SetAsCircle(float _radius, Vector2 _offset)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Core</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>GameObjectList</Name>
        <Access>Public</Access>
        <Location left="122" top="184" />
        <Size width="243" height="366" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Dictionary&lt;string, AddPack&gt; m_addList</Member>
        <Member type="Field">List&lt;GameObject&gt; m_removeList</Member>
        <Member type="Field">Dictionary&lt;string, List&lt;string&gt;&gt; nameDictionary</Member>
        <Member type="Method">public void AddGameObject(GameObject _gameObject)</Member>
        <Member type="Method">public void RemoveGameObject(string _guid)</Member>
        <Member type="Method">public void Rename(string _oldName, GameObject _gameObject)</Member>
        <Member type="Method">public List&lt;string&gt; GetGameObjectsGuidByName(string _name)</Member>
        <Member type="Method">public GameObject GetOneGameObjectByName(string _name)</Member>
        <Member type="Method">public void UpdateAdd(Scene _scene)</Member>
        <Member type="Method">public void UpdateRemove(Scene _scene)</Member>
        <Member type="Method">public override void ReleaseAll()</Member>
        <Member type="Method">public void AddSingleGameObject(GameObject _gameObject)</Member>
        <Member type="Method">public void RemoveSingleGameObject(string _guid)</Member>
        <Member type="Method">public void Update(int _timeInMS)</Member>
        <Member type="Method">public void EditorUpdate(int _timeInMS)</Member>
        <Member type="Method">public bool SaveToNode(XmlNode _node, XmlDocument _doc)</Member>
        <Member type="Method">public static GameObjectList LoadFromNode(XmlNode _node, Scene _scene)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameObject</Name>
        <Access>Public</Access>
        <Location left="425" top="184" />
        <Size width="162" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public Vector3 Position { get; set; }</Member>
        <Member type="Property">public CatVector3 PositionRef { get; }</Member>
        <Member type="Property">public Vector3 AbsPosition { get; }</Member>
        <Member type="Property">public Vector3 Rotation { get; set; }</Member>
        <Member type="Property">public CatQuaternion RotationRef { get; }</Member>
        <Member type="Property">public Vector3 AbsRotation { get; }</Member>
        <Member type="Property">public Vector3 Scale { get; set; }</Member>
        <Member type="Property">public CatVector3 ScaleRef { get; }</Member>
        <Member type="Method">public void AttachToGameObject(GameObject _parent)</Member>
        <Member type="Method">public void DetachFromParent()</Member>
        <Member type="Property">public Vector3 AbsScale { get; set; }</Member>
        <Member type="Property">public Matrix AbsTransform { get; }</Member>
        <Member type="Property">public GameObject Parent { get; set; }</Member>
        <Member type="Property">public List&lt;GameObject&gt; Children { get; }</Member>
        <Member type="Method">public void AddComponent(CatComponent _component)</Member>
        <Member type="Method">public CatComponent GetComponent(Type _componentType)</Member>
        <Member type="Method">public CatComponent GetComponent(string _componentName)</Member>
        <Member type="Property">public Dictionary&lt;string, CatComponent&gt; Components { get; set; }</Member>
        <Member type="Method">public bool RemoveComponent(Type _componentType)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CatComponent</Name>
        <Access>Public</Access>
        <Location left="665" top="184" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public bool Enable { get; set; }</Member>
        <Member type="Constructor">public CatComponent()</Member>
        <Member type="Constructor">public CatComponent(GameObject _gameObject)</Member>
        <Member type="Method">public virtual void BindToScene(Scene _scene)</Member>
        <Member type="Method">public virtual bool Initialize(Scene _scene)</Member>
        <Member type="Method">public virtual void Update(int _timeLastFrame)</Member>
        <Member type="Method">public virtual void EditorUpdate(int _timeLastFrame)</Member>
        <Member type="Method">public virtual void UnbindFromScene(Scene _scene)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Serialable</Name>
        <Access>Public</Access>
        <Location left="477" top="65" />
        <Size width="283" height="383" />
        <Collapsed>True</Collapsed>
        <Member type="Field">Dictionary&lt;Pointer, string&gt; m_delayBindingTable</Member>
        <Member type="Field">static List&lt;ISerializeType&gt; iserializeType</Member>
        <Member type="Field">static Dictionary&lt;string, Serialable&gt; guidTable</Member>
        <Member type="Method">public static void InitializeSerializeTypeTable()</Member>
        <Member type="Method">public static ISerializeType FindSuitableSerialType(Type _type)</Member>
        <Member type="Method">public static void BeginSupportingDelayBinding()</Member>
        <Member type="Method">public static void EndSupportingDelayBinding(bool _isClearGuidTable)</Member>
        <Member type="Method">public XmlNode DoSerial(XmlDocument _doc)</Member>
        <Member type="Method">public static Serialable DoUnserial(XmlNode _node)</Member>
        <Member type="Method">public Serialable DoClone()</Member>
        <Member type="Method">protected void PreSerial()</Member>
        <Member type="Property">public string GUID { get; set; }</Member>
        <Member type="Method">protected void PostSerial(ref XmlNode _node, XmlDocument _doc)</Member>
        <Member type="Method">protected void PreUnserial(ref XmlNode _node)</Member>
        <Member type="Method">protected void PreClone(Serialable _object)</Member>
        <Member type="Method">protected void PostClone(Serialable _object)</Member>
        <Member type="Method">protected void PostUnserial(XmlNode _node)</Member>
        <Member type="Method">public virtual void PostDelayBinding()</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="1" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>512</X>
          <Y>152</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>618</X>
          <Y>143</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="2" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Serialize</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Serialable</Name>
        <Access>Public</Access>
        <Location left="948" top="357" />
        <Size width="283" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Field">Dictionary&lt;Pointer, string&gt; m_delayBindingTable</Member>
        <Member type="Field">static List&lt;ISerializeType&gt; iserializeType</Member>
        <Member type="Field">static Dictionary&lt;string, Serialable&gt; guidTable</Member>
        <Member type="Method">public static void InitializeSerializeTypeTable()</Member>
        <Member type="Method">public static ISerializeType FindSuitableSerialType(Type _type)</Member>
        <Member type="Method">public static void BeginSupportingDelayBinding()</Member>
        <Member type="Method">public static void EndSupportingDelayBinding(bool _isClearGuidTable)</Member>
        <Member type="Method">public XmlNode DoSerial(XmlDocument _doc)</Member>
        <Member type="Method">public static Serialable DoUnserial(XmlNode _node)</Member>
        <Member type="Method">public Serialable DoClone()</Member>
        <Member type="Method">protected void PreSerial()</Member>
        <Member type="Property">public string GUID { get; set; }</Member>
        <Member type="Method">protected void PostSerial(ref XmlNode _node, XmlDocument _doc)</Member>
        <Member type="Method">protected void PreUnserial(ref XmlNode _node)</Member>
        <Member type="Method">protected void PreClone(Serialable _object)</Member>
        <Member type="Method">protected void PostClone(Serialable _object)</Member>
        <Member type="Method">protected void PostUnserial(XmlNode _node)</Member>
        <Member type="Method">public virtual void PostDelayBinding()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Pointer</Name>
        <Access>Public</Access>
        <Location left="1436" top="333" />
        <Size width="267" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">FieldInfo m_fieldInfo</Member>
        <Member type="Field">Object m_fieldObject</Member>
        <Member type="Field">IDictionary m_dictionary</Member>
        <Member type="Field">Object m_dictionaryKey</Member>
        <Member type="Field">IEffectParameter m_ieffectParameter</Member>
        <Member type="Field">ContentType m_contentType</Member>
        <Member type="Method">public void SetValue(object _value)</Member>
        <Member type="Method">public Object GetValue()</Member>
        <Member type="Constructor">public Pointer(Object _object, FieldInfo _fieldInfo)</Member>
        <Member type="Constructor">public Pointer(IDictionary _dictionary, Object _key)</Member>
        <Member type="Constructor">public Pointer(IEffectParameter _ieffectParameter)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>ContentType</Name>
        <Access>Public</Access>
        <Location left="1436" top="650" />
        <Size width="162" height="112" />
        <Collapsed>False</Collapsed>
        <Value>ContentField</Value>
        <Value>ContentIDictionaryEnumerator</Value>
        <Value>ContentIEffectParameter</Value>
      </Entity>
      <Entity type="Interface">
        <Name>ISerializeType</Name>
        <Access>Public</Access>
        <Location left="876" top="142" />
        <Size width="162" height="133" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool IsThisType(Type _type)</Member>
        <Member type="Method">XmlNode Serial(Object _object, SerialAttribute _attribute, XmlDocument _doc, string _nameField)</Member>
        <Member type="Method">object Unserial(Pointer _pointer, SerialAttribute _attribute, XmlNode _fieldNode, Dictionary&lt;Pointer, string&gt; _delayBindingTable)</Member>
        <Member type="Method">object Clone(Pointer _pointer, SerialAttribute _attribute, object _object, Dictionary&lt;Pointer, string&gt; _delayBindingTable)</Member>
      </Entity>
      <Entity type="Class">
        <Name>SerializeDictionary</Name>
        <Access>Public</Access>
        <Location left="677" top="357" />
        <Size width="162" height="81" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializeIEffectParameter</Name>
        <Access>Public</Access>
        <Location left="491" top="357" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializeSerialable</Name>
        <Access>Public</Access>
        <Location left="300" top="357" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SerializeString</Name>
        <Access>Public</Access>
        <Location left="107" top="357" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="3">
        <Label>iserializeType</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="1">
        <Label>m_delayBindingTable</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="0">
        <Label>guidTable</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="4" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="5" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="6" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="7" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="0" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Environment</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Environment</Name>
        <Access>Public</Access>
        <Location left="128" top="138" />
        <Size width="162" height="169" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int DayDurationInS { get; set; }</Member>
        <Member type="Property">public string AmbientLightMap { get; set; }</Member>
        <Member type="Property">public string DiffuseLightMap { get; set; }</Member>
        <Member type="Property">public Color AmbientColor { get; }</Member>
        <Member type="Property">public Color DiffuseColor { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SkyTimeController</Name>
        <Access>Public</Access>
        <Location left="56" top="486" />
        <Size width="162" height="77" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DiffuseLightController</Name>
        <Access>Public</Access>
        <Location left="247" top="486" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AmbientLightController</Name>
        <Access>Public</Access>
        <Location left="432" top="486" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="2" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="3" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>BehaviorTree</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>BTNode</Name>
        <Access>Public</Access>
        <Location left="872" top="65" />
        <Size width="215" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public virtual bool Execute(BTTreeRuntimePack _runtimePack)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTCompositeNode</Name>
        <Access>Public</Access>
        <Location left="731" top="255" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected List&lt;BTNode&gt; m_children</Member>
        <Member type="Method">public void AddChild(BTNode _btNode)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTDecoratorNode</Name>
        <Access>Public</Access>
        <Location left="1001" top="255" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public BTNode Child { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTConditionNode</Name>
        <Access>Public</Access>
        <Location left="1191" top="255" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public BTNode Child { get; set; }</Member>
        <Member type="Method">protected virtual bool JudgeCondition(BTTreeRuntimePack _runtimePack)</Member>
        <Member type="Method">public sealed override bool Execute(BTTreeRuntimePack _runtimePack)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTActionNode</Name>
        <Access>Public</Access>
        <Location left="1386" top="255" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public virtual void OnEnter(BTTreeRuntimePack _runtimePack)</Member>
        <Member type="Method">public bool OnRunning(BTTreeRuntimePack _runtimePack)</Member>
        <Member type="Method">public virtual void OnExit(BTTreeRuntimePack _runtimePack)</Member>
        <Member type="Method">public sealed override bool Execute(BTTreeRuntimePack _runtimePack)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTLinearSelectorNode</Name>
        <Access>Public</Access>
        <Location left="525" top="547" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTLinearSequenceNode</Name>
        <Access>Public</Access>
        <Location left="700" top="547" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTParallelSelectNode</Name>
        <Access>Public</Access>
        <Location left="872" top="547" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTTree</Name>
        <Access>Public</Access>
        <Location left="525" top="65" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">BTNode m_root</Member>
        <Member type="Field">Dictionary&lt;string, object&gt; m_blackboard</Member>
        <Member type="Field">Set&lt;BTActionNote&gt; m_runningAction</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTTreeManager</Name>
        <Access>Public</Access>
        <Location left="204" top="65" />
        <Size width="162" height="148" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string BTTreeDirectoryRoot { set; }</Member>
        <Member type="Method">public BTTree LoadBTTree(string _name, bool _forceLoad = false)</Member>
        <Member type="Method">public void AddBTTree(string _name, BTTree _btTree)</Member>
        <Member type="Method">public void SaveAllBTTree(string _directory)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTTreeRuntimePack</Name>
        <Access>Public</Access>
        <Location left="204" top="313" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public GameObject GameObject { set; }</Member>
        <Member type="Property">public BTTree BTTree { get; }</Member>
        <Member type="Property">public string BTTreeName { set; }</Member>
        <Member type="Constructor">public BTTreeRuntimePack(GameObject _gameObject, string _btTreeName)</Member>
        <Member type="Method">public bool IsActionRunning(BTActionNode _actionNode)</Member>
        <Member type="Method">public void DeclareRunning(BTActionNode _actionNode)</Member>
        <Member type="Method">public void UpdateBTTree(int _timeLastFrameInMS)</Member>
        <Member type="Method">public void AddToBlackboard(string _key, object _value)</Member>
        <Member type="Method">public object GetFromBlackboard(string _key, object _backup = null)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTTreeComponent</Name>
        <Access>Public</Access>
        <Location left="10" top="313" />
        <Size width="162" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public BTTreeRuntimePack RuntimePack { get; }</Member>
        <Member type="Property">public string BTTreeName { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="5" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="6" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="4" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="8" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="9" second="8">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="10" second="8">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="11" second="10">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>BTTreeEditor Use Case</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>OpenTheEditorView</Name>
        <Access>Public</Access>
        <Location left="199" top="296" />
        <Size width="218" height="77" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OpenViewAndOpenBTTree</Name>
        <Access>Public</Access>
        <Location left="10" top="383" />
        <Size width="218" height="77" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OpenViewAndObserveTree</Name>
        <Access>Public</Access>
        <Location left="615" top="383" />
        <Size width="223" height="77" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CreateNewBTTree</Name>
        <Access>Public</Access>
        <Location left="475" top="30" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OpenBTTree</Name>
        <Access>Public</Access>
        <Location left="475" top="104" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SynchronizeTrees</Name>
        <Access>Public</Access>
        <Location left="475" top="180" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>InsertBTNode</Name>
        <Access>Public</Access>
        <Location left="675" top="29" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RemoveBTNode</Name>
        <Access>Public</Access>
        <Location left="675" top="103" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ChangeBTNodeParent</Name>
        <Access>Public</Access>
        <Location left="675" top="179" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ChangeBTNodeSequence</Name>
        <Access>Public</Access>
        <Location left="675" top="253" />
        <Size width="162" height="77" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OpenViewWithoutTreeLoaded</Name>
        <Access>Public</Access>
        <Location left="199" top="482" />
        <Size width="213" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OpenViewWithTreeLoaded</Name>
        <Access>Public</Access>
        <Location left="199" top="645" />
        <Size width="213" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OpenViewWithTreeObserved</Name>
        <Access>Public</Access>
        <Location left="615" top="482" />
        <Size width="223" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Visible</Name>
        <Access>Public</Access>
        <Location left="884" top="482" />
        <Size width="162" height="97" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Invisible</Name>
        <Access>Public</Access>
        <Location left="1133" top="482" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Keep update Blackboard and BTTreeView</Text>
        <Location left="884" top="586" />
        <Size width="160" height="50" />
      </Entity>
      <Entity type="Comment">
        <Text>Pause update Blackboard and BTTreeViewer</Text>
        <Location left="1133" top="586" />
        <Size width="160" height="50" />
      </Entity>
      <Entity type="Class">
        <Name>CloseView</Name>
        <Access>Public</Access>
        <Location left="884" top="30" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShowView</Name>
        <Access>Public</Access>
        <Location left="884" top="104" />
        <Size width="162" height="216" />
        <Collapsed>True</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="2" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>506</X>
          <Y>406</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="10" second="11">
        <Label>OpenBTTree/CreatedNewBTTree</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="10" second="12">
        <Label>OpenObserveBTTree</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>437</X>
          <Y>494</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="10">
        <Label>StopObserveTre</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>441</X>
          <Y>517</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="12">
        <Label>OpenObserveBTTree</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>437</X>
          <Y>657</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="11">
        <Label>StopObserveTree</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>759</X>
          <Y>552</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>498</X>
          <Y>682</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="12">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="10">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="11">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>120</X>
          <Y>669</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="13" second="14">
        <Label>Close</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1075</X>
          <Y>492</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="13">
        <Label>Open</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1071</X>
          <Y>517</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="15" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="16" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>BTTreeEditor</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>BTTreeEditor</Name>
        <Access>Public</Access>
        <Location left="27" top="104" />
        <Size width="229" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public BTTreeEditor()</Member>
        <Member type="Method">public void OpenBTTree(BTTree _btTree)</Member>
        <Member type="Method">public void ObserveLiveBTTree(BTTreeRuntimePack _runtimePack)</Member>
        <Member type="Method">public bool IsObservingThisRuntimePack(BTTreeRuntimePack _runtimePack)</Member>
        <Member type="Method">public void UpdateBTTreeViewer()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTTreeViewer</Name>
        <Access>Public</Access>
        <Location left="323" top="104" />
        <Size width="373" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public BTTree BTTree { get; }</Member>
        <Member type="Method">public void DeclareAddNode(BTNode _treeNode)</Member>
        <Member type="Method">public void DeclareRemoveNode(BTNode _treeNode)</Member>
        <Member type="Method">public void SetBTTree(BTTree _bttree)</Member>
        <Member type="Method">public void SetBTTreeAndObservingRuntimePack(BTTreeRuntimePack _runtimePack)</Member>
        <Member type="Event">public event EventHandler&lt;BTNodeSelectedArgs&gt; OnBTNodeDeselected</Member>
        <Member type="Event">public event EventHandler&lt;BTNodeSelectedArgs&gt; OnBTNodeSelected</Member>
        <Member type="Method">internal void DeclareRightBottom(Point _point)</Member>
        <Member type="Method">internal Point GetDrawPosition(Point _point)</Member>
        <Member type="Method">internal BTEditorRectangle GetRectangle(BTNode _node)</Member>
        <Member type="Method">internal BTEditorRectangle GetRectangle(BTNode _node)</Member>
        <Member type="Method">internal BTTreeRuntimePack.RuntimeState GetRuntimeState(BTNode _btNode)</Member>
        <Member type="Method">internal BTTreRuntimePack.RuntimeState GetRuntimeState(BTNode _btNode)</Member>
        <Member type="Method">internal Point GetWorldPosition(Point _point)</Member>
        <Member type="Method">internal bool IsObservingRuntimePack()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTEditorSprite</Name>
        <Access>Public</Access>
        <Location left="380" top="504" />
        <Size width="275" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static Color FalseFillColor</Member>
        <Member type="Field">protected static Color TrueFillColor</Member>
        <Member type="Field">protected BTTreeViewer m_treeViewer</Member>
        <Member type="Field">protected static Font font</Member>
        <Member type="Constructor">internal BTEditorSprite(BTTreeViewer _treeViewer)</Member>
        <Member type="Method">internal virtual bool IsMouseOn(Point _pos)</Member>
        <Member type="Method">internal virtual void OnPaint(PaintEventArgs e)</Member>
        <Member type="Method">internal virtual void OnMouseDown(Point _pos)</Member>
        <Member type="Method">internal virtual void OnMouseUp(Point _pos)</Member>
        <Member type="Method">internal virtual void OnMouseClick(Point _pos)</Member>
        <Member type="Method">internal virtual void OnDragOn(Point _pos, BTEditorSprite _source)</Member>
        <Member type="Method">internal virtual void OnMouseDrag(Point _pos, Point _delta)</Member>
        <Member type="Method">internal virtual void OnSelect()</Member>
        <Member type="Method">internal virtual void OnDeselect()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTEditorRectangle</Name>
        <Access>Public</Access>
        <Location left="711" top="740" />
        <Size width="309" height="417" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static Brush FalseFillBrush</Member>
        <Member type="Field">protected static int HorizontalInterval</Member>
        <Member type="Field">protected static Brush NonSelectedBrush</Member>
        <Member type="Field">protected static int runStateBorderWidth</Member>
        <Member type="Field">protected static Brush TrueFillBrush</Member>
        <Member type="Field">protected static int VerticalInterval</Member>
        <Member type="Property">internal BTNode Node { get; set; }</Member>
        <Member type="Method">internal abstract int AutoRecursivelyLayout(Dictionary&lt;string, BTEditorSprite&gt; _sprites, Point _leftTop)</Member>
        <Member type="Method">internal abstract BTEditorRectangle Clone(BTTreeViewer _treeViewer)</Member>
        <Member type="Method">internal virtual Point GetChildPoint()</Member>
        <Member type="Method">internal static string GetKey(BTNode _node)</Member>
        <Member type="Method">internal string GetKey()</Member>
        <Member type="Method">internal virtual Point GetParentPoint()</Member>
        <Member type="Method">internal Point GetPosition()</Member>
        <Member type="Method">internal static void RecursivelyCreateSprites(Dictionary&lt;string, BTEditorSprite&gt; _sprites, BTNode _btNode, BTTreeViewer _btTreeViewer)</Member>
        <Member type="Method">protected Rectangle GetDrawBound()</Member>
        <Member type="Method">protected abstract bool IsThisType(BTNode _btNode)</Member>
        <Member type="Method">protected void DrawStringCentreAlign(string _text, Graphics _gc, Brush _brush)</Member>
        <Member type="Method">protected abstract void RecursivelyCreatChildren(Dictionary&lt;string, BTEditorSprite&gt; _sprites)</Member>
        <Member type="Method">protected void DefaultPaintProcess(Graphics _gc, Brush _nodeColor, Brush _selectColor)</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTEditorLine</Name>
        <Access>Public</Access>
        <Location left="145" top="740" />
        <Size width="162" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected static int TrailPenWidth</Member>
        <Member type="Field">protected static Pen FalseDrawPen</Member>
        <Member type="Field">protected static Pen TrueDrawPen</Member>
        <Member type="Property">internal BTNode ParentNode { get; set; }</Member>
        <Member type="Property">internal BTNode ChildNode { get; set; }</Member>
        <Member type="Method">internal string GetKey()</Member>
        <Member type="Method">internal static string GetKey(BTNode _parent, BTNode _child)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTEditorRectangleBTActionNode</Name>
        <Access>Public</Access>
        <Location left="442" top="1243" />
        <Size width="234" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTEditorRectangleBTCompositeNode</Name>
        <Access>Public</Access>
        <Location left="711" top="1243" />
        <Size width="309" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">internal void AdjustChildrenSequence(BTEditorRectangle _rectangle, Point _worldPos)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTEditorRectangleBTConditionNode</Name>
        <Access>Public</Access>
        <Location left="1049" top="1243" />
        <Size width="248" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BTNodeSelectedArgs</Name>
        <Access>Public</Access>
        <Location left="754" top="91" />
        <Size width="162" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public BTNode BTNode { get; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>MouseAction</Name>
        <Access>Public</Access>
        <Location left="754" top="213" />
        <Size width="162" height="112" />
        <Collapsed>False</Collapsed>
        <Value>MouseDown</Value>
        <Value>MouseMove</Value>
        <Value>MouseUp</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="4" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="5" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="6" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="1" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>681</X>
          <Y>527</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="8" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Bidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="9" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>